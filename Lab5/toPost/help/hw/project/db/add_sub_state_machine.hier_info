|add_sub
clk => synchronizer_8bit:sync_a.clk
clk => synchronizer_8bit:sync_b.clk
clk => rising_edge_synchronizer:cycle_edge.clk
clk => generic_add_sub:math_comp.CLK
clk => ctrl_stm:states.CLK
reset => synchronizer_8bit:sync_a.reset
reset => synchronizer_8bit:sync_b.reset
reset => rising_edge_synchronizer:cycle_edge.reset
reset => generic_add_sub:math_comp.RESET
reset => ctrl_stm:states.RST
reset => seven_segment_full:result_display.RESET
a_b_input[0] => b_input[0].DATAIN
a_b_input[0] => a_input[0].DATAIN
a_b_input[1] => b_input[1].DATAIN
a_b_input[1] => a_input[1].DATAIN
a_b_input[2] => b_input[2].DATAIN
a_b_input[2] => a_input[2].DATAIN
a_b_input[3] => b_input[3].DATAIN
a_b_input[3] => a_input[3].DATAIN
a_b_input[4] => b_input[4].DATAIN
a_b_input[4] => a_input[4].DATAIN
a_b_input[5] => b_input[5].DATAIN
a_b_input[5] => a_input[5].DATAIN
a_b_input[6] => b_input[6].DATAIN
a_b_input[6] => a_input[6].DATAIN
a_b_input[7] => b_input[7].DATAIN
a_b_input[7] => a_input[7].DATAIN
btn => rising_edge_synchronizer:cycle_edge.input
state[0] << ctrl_stm:states.STATE[0]
state[1] << ctrl_stm:states.STATE[1]
state[2] << ctrl_stm:states.STATE[2]
state[3] << ctrl_stm:states.STATE[3]
hex_one[0] << seven_segment_full:result_display.HEX_ONE[0]
hex_one[1] << seven_segment_full:result_display.HEX_ONE[1]
hex_one[2] << seven_segment_full:result_display.HEX_ONE[2]
hex_one[3] << seven_segment_full:result_display.HEX_ONE[3]
hex_one[4] << seven_segment_full:result_display.HEX_ONE[4]
hex_one[5] << seven_segment_full:result_display.HEX_ONE[5]
hex_one[6] << seven_segment_full:result_display.HEX_ONE[6]
hex_two[0] << seven_segment_full:result_display.HEX_TWO[0]
hex_two[1] << seven_segment_full:result_display.HEX_TWO[1]
hex_two[2] << seven_segment_full:result_display.HEX_TWO[2]
hex_two[3] << seven_segment_full:result_display.HEX_TWO[3]
hex_two[4] << seven_segment_full:result_display.HEX_TWO[4]
hex_two[5] << seven_segment_full:result_display.HEX_TWO[5]
hex_two[6] << seven_segment_full:result_display.HEX_TWO[6]
hex_three[0] << seven_segment_full:result_display.HEX_THREE[0]
hex_three[1] << seven_segment_full:result_display.HEX_THREE[1]
hex_three[2] << seven_segment_full:result_display.HEX_THREE[2]
hex_three[3] << seven_segment_full:result_display.HEX_THREE[3]
hex_three[4] << seven_segment_full:result_display.HEX_THREE[4]
hex_three[5] << seven_segment_full:result_display.HEX_THREE[5]
hex_three[6] << seven_segment_full:result_display.HEX_THREE[6]


|add_sub|synchronizer_8bit:sync_a
clk => sync_reg[0].CLK
clk => sync_reg[1].CLK
clk => sync_reg[2].CLK
clk => sync_reg[3].CLK
clk => sync_reg[4].CLK
clk => sync_reg[5].CLK
clk => sync_reg[6].CLK
clk => sync_reg[7].CLK
reset => sync_reg[0].ACLR
reset => sync_reg[1].ACLR
reset => sync_reg[2].ACLR
reset => sync_reg[3].ACLR
reset => sync_reg[4].ACLR
reset => sync_reg[5].ACLR
reset => sync_reg[6].ACLR
reset => sync_reg[7].ACLR
async_in[0] => sync_reg[0].DATAIN
async_in[1] => sync_reg[1].DATAIN
async_in[2] => sync_reg[2].DATAIN
async_in[3] => sync_reg[3].DATAIN
async_in[4] => sync_reg[4].DATAIN
async_in[5] => sync_reg[5].DATAIN
async_in[6] => sync_reg[6].DATAIN
async_in[7] => sync_reg[7].DATAIN
sync_out[0] <= sync_reg[0].DB_MAX_OUTPUT_PORT_TYPE
sync_out[1] <= sync_reg[1].DB_MAX_OUTPUT_PORT_TYPE
sync_out[2] <= sync_reg[2].DB_MAX_OUTPUT_PORT_TYPE
sync_out[3] <= sync_reg[3].DB_MAX_OUTPUT_PORT_TYPE
sync_out[4] <= sync_reg[4].DB_MAX_OUTPUT_PORT_TYPE
sync_out[5] <= sync_reg[5].DB_MAX_OUTPUT_PORT_TYPE
sync_out[6] <= sync_reg[6].DB_MAX_OUTPUT_PORT_TYPE
sync_out[7] <= sync_reg[7].DB_MAX_OUTPUT_PORT_TYPE


|add_sub|synchronizer_8bit:sync_b
clk => sync_reg[0].CLK
clk => sync_reg[1].CLK
clk => sync_reg[2].CLK
clk => sync_reg[3].CLK
clk => sync_reg[4].CLK
clk => sync_reg[5].CLK
clk => sync_reg[6].CLK
clk => sync_reg[7].CLK
reset => sync_reg[0].ACLR
reset => sync_reg[1].ACLR
reset => sync_reg[2].ACLR
reset => sync_reg[3].ACLR
reset => sync_reg[4].ACLR
reset => sync_reg[5].ACLR
reset => sync_reg[6].ACLR
reset => sync_reg[7].ACLR
async_in[0] => sync_reg[0].DATAIN
async_in[1] => sync_reg[1].DATAIN
async_in[2] => sync_reg[2].DATAIN
async_in[3] => sync_reg[3].DATAIN
async_in[4] => sync_reg[4].DATAIN
async_in[5] => sync_reg[5].DATAIN
async_in[6] => sync_reg[6].DATAIN
async_in[7] => sync_reg[7].DATAIN
sync_out[0] <= sync_reg[0].DB_MAX_OUTPUT_PORT_TYPE
sync_out[1] <= sync_reg[1].DB_MAX_OUTPUT_PORT_TYPE
sync_out[2] <= sync_reg[2].DB_MAX_OUTPUT_PORT_TYPE
sync_out[3] <= sync_reg[3].DB_MAX_OUTPUT_PORT_TYPE
sync_out[4] <= sync_reg[4].DB_MAX_OUTPUT_PORT_TYPE
sync_out[5] <= sync_reg[5].DB_MAX_OUTPUT_PORT_TYPE
sync_out[6] <= sync_reg[6].DB_MAX_OUTPUT_PORT_TYPE
sync_out[7] <= sync_reg[7].DB_MAX_OUTPUT_PORT_TYPE


|add_sub|rising_edge_synchronizer:cycle_edge
clk => input_zzz.CLK
clk => edge~reg0.CLK
clk => input_zz.CLK
clk => input_z.CLK
reset => input_zzz.PRESET
reset => edge~reg0.ACLR
reset => input_zz.PRESET
reset => input_z.PRESET
input => input_z.DATAIN
edge <= edge~reg0.DB_MAX_OUTPUT_PORT_TYPE


|add_sub|generic_add_sub:math_comp
CLK => s_b_val[0].CLK
CLK => s_b_val[1].CLK
CLK => s_b_val[2].CLK
CLK => s_b_val[3].CLK
CLK => s_b_val[4].CLK
CLK => s_b_val[5].CLK
CLK => s_b_val[6].CLK
CLK => s_b_val[7].CLK
CLK => s_a_val[0].CLK
CLK => s_a_val[1].CLK
CLK => s_a_val[2].CLK
CLK => s_a_val[3].CLK
CLK => s_a_val[4].CLK
CLK => s_a_val[5].CLK
CLK => s_a_val[6].CLK
CLK => s_a_val[7].CLK
RESET => s_b_val[0].ACLR
RESET => s_b_val[1].ACLR
RESET => s_b_val[2].ACLR
RESET => s_b_val[3].ACLR
RESET => s_b_val[4].ACLR
RESET => s_b_val[5].ACLR
RESET => s_b_val[6].ACLR
RESET => s_b_val[7].ACLR
RESET => s_a_val[0].ACLR
RESET => s_a_val[1].ACLR
RESET => s_a_val[2].ACLR
RESET => s_a_val[3].ACLR
RESET => s_a_val[4].ACLR
RESET => s_a_val[5].ACLR
RESET => s_a_val[6].ACLR
RESET => s_a_val[7].ACLR
A_SYNC[0] => s_a_val[0].DATAIN
A_SYNC[1] => s_a_val[1].DATAIN
A_SYNC[2] => s_a_val[2].DATAIN
A_SYNC[3] => s_a_val[3].DATAIN
A_SYNC[4] => s_a_val[4].DATAIN
A_SYNC[5] => s_a_val[5].DATAIN
A_SYNC[6] => s_a_val[6].DATAIN
A_SYNC[7] => s_a_val[7].DATAIN
B_SYNC[0] => s_b_val.DATAB
B_SYNC[1] => s_b_val.DATAB
B_SYNC[2] => s_b_val.DATAB
B_SYNC[3] => s_b_val.DATAB
B_SYNC[4] => s_b_val.DATAB
B_SYNC[5] => s_b_val.DATAB
B_SYNC[6] => s_b_val.DATAB
B_SYNC[7] => s_b_val.DATAB
STATE[0] => s_a_val[7].ENA
STATE[0] => s_a_val[6].ENA
STATE[0] => s_a_val[5].ENA
STATE[0] => s_a_val[4].ENA
STATE[0] => s_a_val[3].ENA
STATE[0] => s_a_val[2].ENA
STATE[0] => s_a_val[1].ENA
STATE[0] => s_a_val[0].ENA
STATE[0] => s_b_val[7].ENA
STATE[0] => s_b_val[6].ENA
STATE[0] => s_b_val[5].ENA
STATE[0] => s_b_val[4].ENA
STATE[0] => s_b_val[3].ENA
STATE[0] => s_b_val[2].ENA
STATE[0] => s_b_val[1].ENA
STATE[0] => s_b_val[0].ENA
STATE[1] => s_b_val.OUTPUTSELECT
STATE[1] => s_b_val.OUTPUTSELECT
STATE[1] => s_b_val.OUTPUTSELECT
STATE[1] => s_b_val.OUTPUTSELECT
STATE[1] => s_b_val.OUTPUTSELECT
STATE[1] => s_b_val.OUTPUTSELECT
STATE[1] => s_b_val.OUTPUTSELECT
STATE[1] => s_b_val.OUTPUTSELECT
STATE[2] => RESULT[8].IN0
STATE[3] => RESULT[0].OUTPUTSELECT
STATE[3] => RESULT[1].OUTPUTSELECT
STATE[3] => RESULT[2].OUTPUTSELECT
STATE[3] => RESULT[3].OUTPUTSELECT
STATE[3] => RESULT[4].OUTPUTSELECT
STATE[3] => RESULT[5].OUTPUTSELECT
STATE[3] => RESULT[6].OUTPUTSELECT
STATE[3] => RESULT[7].OUTPUTSELECT
STATE[3] => RESULT[8].OUTPUTSELECT
STATE[3] => RESULT[8].IN1
RESULT[0] <= RESULT[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
RESULT[1] <= RESULT[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
RESULT[2] <= RESULT[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
RESULT[3] <= RESULT[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
RESULT[4] <= RESULT[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
RESULT[5] <= RESULT[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
RESULT[6] <= RESULT[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
RESULT[7] <= RESULT[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
RESULT[8] <= RESULT[8]$latch.DB_MAX_OUTPUT_PORT_TYPE


|add_sub|ctrl_stm:states
CLK => STATE[0]~reg0.CLK
CLK => STATE[1]~reg0.CLK
CLK => STATE[2]~reg0.CLK
CLK => STATE[3]~reg0.CLK
CLK => cur_st~1.DATAIN
RST => STATE[0]~reg0.ACLR
RST => STATE[1]~reg0.ACLR
RST => STATE[2]~reg0.ACLR
RST => STATE[3]~reg0.ACLR
RST => cur_st~3.DATAIN
BUTTON => Selector0.IN3
BUTTON => Selector1.IN3
BUTTON => Selector2.IN3
BUTTON => Selector3.IN3
BUTTON => Selector0.IN1
BUTTON => Selector1.IN1
BUTTON => Selector2.IN1
BUTTON => Selector3.IN1
STATE[0] <= STATE[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
STATE[1] <= STATE[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
STATE[2] <= STATE[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
STATE[3] <= STATE[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|add_sub|seven_segment_full:result_display
RESET => ~NO_FANOUT~
STATE[0] => ~NO_FANOUT~
STATE[1] => s_result[8].OUTPUTSELECT
STATE[1] => s_result[7].OUTPUTSELECT
STATE[1] => s_result[6].OUTPUTSELECT
STATE[1] => s_result[5].OUTPUTSELECT
STATE[1] => s_result[4].OUTPUTSELECT
STATE[1] => s_result[3].OUTPUTSELECT
STATE[1] => s_result[2].OUTPUTSELECT
STATE[1] => s_result[1].OUTPUTSELECT
STATE[1] => s_result[0].OUTPUTSELECT
STATE[2] => state_proc.IN0
STATE[3] => state_proc.IN1
A_BCD[0] => s_result.DATAA
A_BCD[1] => s_result.DATAA
A_BCD[2] => s_result.DATAA
A_BCD[3] => s_result.DATAA
A_BCD[4] => s_result.DATAA
A_BCD[5] => s_result.DATAA
A_BCD[6] => s_result.DATAA
A_BCD[7] => s_result.DATAA
B_BCD[0] => s_result[0].DATAB
B_BCD[1] => s_result[1].DATAB
B_BCD[2] => s_result[2].DATAB
B_BCD[3] => s_result[3].DATAB
B_BCD[4] => s_result[4].DATAB
B_BCD[5] => s_result[5].DATAB
B_BCD[6] => s_result[6].DATAB
B_BCD[7] => s_result[7].DATAB
BCD[0] => s_result.DATAB
BCD[1] => s_result.DATAB
BCD[2] => s_result.DATAB
BCD[3] => s_result.DATAB
BCD[4] => s_result.DATAB
BCD[5] => s_result.DATAB
BCD[6] => s_result.DATAB
BCD[7] => s_result.DATAB
BCD[8] => s_result.DATAB
HEX_ONE[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
HEX_ONE[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
HEX_ONE[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
HEX_ONE[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
HEX_ONE[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
HEX_ONE[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
HEX_ONE[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
HEX_TWO[0] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
HEX_TWO[1] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
HEX_TWO[2] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
HEX_TWO[3] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
HEX_TWO[4] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
HEX_TWO[5] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
HEX_TWO[6] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
HEX_THREE[0] <= Mux20.DB_MAX_OUTPUT_PORT_TYPE
HEX_THREE[1] <= Mux19.DB_MAX_OUTPUT_PORT_TYPE
HEX_THREE[2] <= Mux18.DB_MAX_OUTPUT_PORT_TYPE
HEX_THREE[3] <= Mux17.DB_MAX_OUTPUT_PORT_TYPE
HEX_THREE[4] <= Mux16.DB_MAX_OUTPUT_PORT_TYPE
HEX_THREE[5] <= Mux15.DB_MAX_OUTPUT_PORT_TYPE
HEX_THREE[6] <= Mux14.DB_MAX_OUTPUT_PORT_TYPE


